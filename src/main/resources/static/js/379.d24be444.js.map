{"version":3,"file":"js/379.d24be444.js","mappings":"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","sources":["webpack://test1/./src/admin/modules/components/chat/ChatManage.vue","webpack://test1/./src/axios.js","webpack://test1/./src/admin/modules/components/chat/ChatManageModal.vue","webpack://test1/./src/admin/modules/components/chat/ChatManageModal.vue?a5a8","webpack://test1/./src/admin/modules/components/chat/ChatManage.vue?b467","webpack://test1/./src/user/modules/components/chat/ChatHistoryModal.vue","webpack://test1/./src/user/modules/components/chat/ChatHistoryModal.vue?1830"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>채팅 관리</h1>\r\n    <table>\r\n      <!-- 카테고리, 상태(진행중/완료), 채팅방 생성일, 마지막 수정,일 문의자, 관리-->\r\n      <thead>\r\n        <tr>\r\n          <td>roomId</td>\r\n          <td>상태(진행중/완료)</td>\r\n          <td>카테고리</td>\r\n          <td>생성일</td>\r\n          <td>수정일</td>\r\n          <td>문의자</td>\r\n          <td>답변자</td>\r\n          <td>관리</td>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr\r\n          v-for=\"chat in chatrooms\"\r\n          :key=\"chat.chatroomId\"\r\n          @click=\"openChatHistoryModal(chat.chatroomId)\"\r\n        >\r\n          <td>{{ chat.chatroomId }}</td>\r\n          <td>{{ chat.status }}</td>\r\n          <td>카테고리</td>\r\n          <td>{{ chat.credt }}</td>\r\n          <td>{{ chat.upddt }}</td>\r\n          <td>{{ chat.usr.nick }}</td>\r\n          <td>{{ chat.adm.nick }}</td>\r\n          <td>\r\n            <button @click.stop=\"openChatManageModal(chat.chatroomId)\">\r\n              관리(클릭하면 카테고리/내용 등록할 수 있음)\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <ChatHistoryModal\r\n      v-model:modalValue=\"isChatHistoryModalVisible\"\r\n      :chatroomId=\"chatroomId\"\r\n    />\r\n    <ChatManageModal\r\n      v-model:modalValue=\"isChatManageModalVisible\"\r\n      :chatroomId=\"chatroomId\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from \"vue\";\r\nimport axios from \"@/axios.js\";\r\nimport ChatHistoryModal from \"../../../../user/modules/components/chat/ChatHistoryModal.vue\";\r\nimport ChatManageModal from \"./ChatManageModal.vue\";\r\n\r\nexport default {\r\n  components: { ChatHistoryModal, ChatManageModal },\r\n  setup() {\r\n    const userId = ref(localStorage.getItem(\"adminId\"));\r\n    const nick = ref(localStorage.getItem(\"adminNick\"));\r\n    const chatrooms = ref([]);\r\n    const chatroomId = ref(\"\");\r\n    const isChatHistoryModalVisible = ref(false);\r\n    const isChatManageModalVisible = ref(false);\r\n\r\n    // 채팅 리스트 가져오기 함수\r\n    const getChatroomMngList = async () => {\r\n      console.log(\"admId : \", userId.value);\r\n      console.log(\"admnick : \", nick.value);\r\n      try {\r\n        const response = await axios.post(\"/api/admin/chat/mnglist\", {\r\n          id: userId.value,\r\n        });\r\n        console.log(\"res : \", response.data);\r\n        chatrooms.value = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching chat list:\", error);\r\n      }\r\n    };\r\n\r\n    // 채팅창 열기\r\n    const openChatHistoryModal = (id) => {\r\n      chatroomId.value = id;\r\n      isChatHistoryModalVisible.value = true;\r\n    };\r\n\r\n    // 채팅 관리창 열기\r\n    const openChatManageModal = (id) => {\r\n      chatroomId.value = id;\r\n      isChatManageModalVisible.value = true;\r\n    };\r\n    // mounted 훅에서 getMyChatroomList 호출\r\n    onMounted(() => {\r\n      getChatroomMngList();\r\n    });\r\n\r\n    return {\r\n      userId,\r\n      nick,\r\n      chatrooms,\r\n      chatroomId,\r\n      isChatHistoryModalVisible,\r\n      isChatManageModalVisible,\r\n      openChatHistoryModal,\r\n      openChatManageModal,\r\n    };\r\n  },\r\n};\r\n</script>\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  //baseURL: \"http://localhost:9091\", // 로컬 프론트에서 돌릴때\r\n  //baseURL: \"http://localhost:9090\", // 로컬 백엔드에서 돌릴때\r\n  baseURL: \"https://oral-therine-heesu-f4935ad1.koyeb.app\", // 백엔드 서버 주소\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n","<template>\r\n  <div v-if=\"visible\" class=\"modal-overlay\" @click.self=\"close\">\r\n    <div\r\n      class=\"modal-content\"\r\n      ref=\"modalContent\"\r\n      @mousedown=\"startDrag\"\r\n      @mouseup=\"stopDrag\"\r\n      @mousemove=\"drag\"\r\n    >\r\n      <button class=\"modal-close\" @click=\"close\">×</button>\r\n      카테고리 :\r\n      <select v-model=\"category\">\r\n        <option value=\"cate1\">category1</option>\r\n        <option value=\"cate2\">category2</option>\r\n        <option value=\"cate3\">category3</option>\r\n      </select>\r\n      메모 :\r\n      <textarea v-model=\"memo\" rows=\"4\" cols=\"50\"></textarea>\r\n\r\n      <!-- Validation Error Message -->\r\n      <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n\r\n      <button @click=\"save\">저장</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch, computed } from \"vue\";\r\nimport axios from \"@/axios.js\";\r\n\r\nexport default {\r\n  props: {\r\n    modalValue: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    chatroomId: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n  emits: [\"update:modalValue\"],\r\n  setup(props, { emit }) {\r\n    const category = ref(\"\");\r\n    const memo = ref(\"\");\r\n    const errorMessage = ref(\"\");\r\n    const chatroomId = computed(() => props.chatroomId);\r\n    const visible = ref(props.modalValue);\r\n    const modalContent = ref(null);\r\n    let isDragging = ref(false);\r\n    let startX = 0;\r\n    let startY = 0;\r\n    let initialLeft = 0;\r\n    let initialTop = 0;\r\n\r\n    // 채팅방 관리 정보\r\n    const getMyChatManageInfo = async () => {\r\n      try {\r\n        const response = await axios.post(\"/api/admin/chat/chatManageInfo\", {\r\n          chatroomId: chatroomId.value,\r\n        });\r\n        category.value = response.data.category;\r\n        memo.value = response.data.memo;\r\n      } catch (error) {\r\n        console.error(\"Error fetching chat list:\", error);\r\n      }\r\n    };\r\n\r\n    // 저장\r\n    const save = () => {\r\n      if (validate()) {\r\n        if (confirm(\"저장하시겠습니까?\")) {\r\n          const response = axios.post(\"api/admin/chat/saveChatManageInfo\", {\r\n            chatroomId: chatroomId.value,\r\n            category: category.value,\r\n            memo: memo.value,\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    // 유효성 검사\r\n    const validate = () => {\r\n      if (!category.value) {\r\n        errorMessage.value = \"카테고리를 선택해주세요.\";\r\n        return false;\r\n      }\r\n      if (!memo.value || !memo.value.trim()) {\r\n        errorMessage.value = \"메모를 입력해주세요.\";\r\n        return false;\r\n      }\r\n      errorMessage.value = \"\";\r\n      return true;\r\n    };\r\n\r\n    // 닫기\r\n    const close = () => {\r\n      chatroomId.value = \"\";\r\n      category.value = \"\";\r\n      memo.value = \"\";\r\n      emit(\"update:modalValue\", false);\r\n    };\r\n\r\n    //드래그 제어\r\n    const startDrag = (event) => {\r\n      isDragging.value = true;\r\n      startX = event.clientX;\r\n      startY = event.clientY;\r\n      const rect = modalContent.value.getBoundingClientRect();\r\n      initialLeft = rect.left;\r\n      initialTop = rect.top;\r\n    };\r\n    const stopDrag = () => {\r\n      isDragging.value = false;\r\n    };\r\n    const drag = (event) => {\r\n      if (!isDragging.value) return;\r\n      const dx = event.clientX - startX;\r\n      const dy = event.clientY - startY;\r\n      modalContent.value.style.left = `${initialLeft + dx}px`;\r\n      modalContent.value.style.top = `${initialTop + dy}px`;\r\n    };\r\n\r\n    watch(\r\n      () => props.modalValue,\r\n      (newValue) => {\r\n        visible.value = newValue;\r\n      }\r\n    );\r\n    watch(\r\n      () => chatroomId.value,\r\n      (newValue) => {\r\n        if (newValue) {\r\n          getMyChatManageInfo();\r\n        }\r\n      }\r\n    );\r\n\r\n    return {\r\n      category,\r\n      memo,\r\n      errorMessage,\r\n      chatroomId,\r\n      visible,\r\n      close,\r\n      modalContent,\r\n      startDrag,\r\n      stopDrag,\r\n      drag,\r\n      save,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.modal-content {\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  position: absolute; /* 변경: absolute로 설정하여 드래그 시 이동 가능 */\r\n  cursor: move; /* 드래그 가능한 모양으로 변경 */\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n\r\n.modal-close {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  border: none;\r\n  background: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","import { render } from \"./ChatManageModal.vue?vue&type=template&id=73d4f96b&scoped=true\"\nimport script from \"./ChatManageModal.vue?vue&type=script&lang=js\"\nexport * from \"./ChatManageModal.vue?vue&type=script&lang=js\"\n\nimport \"./ChatManageModal.vue?vue&type=style&index=0&id=73d4f96b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-73d4f96b\"]])\n\nexport default __exports__","import { render } from \"./ChatManage.vue?vue&type=template&id=8445fb28\"\nimport script from \"./ChatManage.vue?vue&type=script&lang=js\"\nexport * from \"./ChatManage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div v-if=\"visible\" class=\"modal-overlay\" @click.self=\"close\">\r\n    <div\r\n      class=\"modal-content\"\r\n      ref=\"modalContent\"\r\n      @mousedown=\"startDrag\"\r\n      @mouseup=\"stopDrag\"\r\n      @mousemove=\"drag\"\r\n    >\r\n      <button class=\"modal-close\" @click=\"close\">×</button>\r\n      <div v-for=\"(msg, index) in messages\" :key=\"index\">\r\n        <p>{{ msg.nick }} : {{ msg.content }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch, computed } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  props: {\r\n    modalValue: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    chatroomId: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n  emits: [\"update:modalValue\"],\r\n  setup(props, { emit }) {\r\n    const chatroomId = computed(() => props.chatroomId);\r\n    const visible = ref(props.modalValue);\r\n    const modalContent = ref(null);\r\n    let isDragging = ref(false);\r\n    let startX = 0;\r\n    let startY = 0;\r\n    let initialLeft = 0;\r\n    let initialTop = 0;\r\n    const message = ref(\"\");\r\n    let messages = ref([]);\r\n\r\n    // 대화내용 불러오기\r\n    const getMyChat = async () => {\r\n      try {\r\n        const response = await axios.post(\"/api/chat/chatList\", {\r\n          chatroomId: chatroomId.value,\r\n        });\r\n        messages.value = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching chat list:\", error);\r\n      }\r\n    };\r\n    // 닫기\r\n    const close = () => {\r\n      chatroomId.value = \"\";\r\n      messages.value = [];\r\n      emit(\"update:modalValue\", false);\r\n    };\r\n\r\n    //드래그 제어\r\n    const startDrag = (event) => {\r\n      isDragging.value = true;\r\n      startX = event.clientX;\r\n      startY = event.clientY;\r\n      const rect = modalContent.value.getBoundingClientRect();\r\n      initialLeft = rect.left;\r\n      initialTop = rect.top;\r\n    };\r\n    const stopDrag = () => {\r\n      isDragging.value = false;\r\n    };\r\n    const drag = (event) => {\r\n      if (!isDragging.value) return;\r\n      const dx = event.clientX - startX;\r\n      const dy = event.clientY - startY;\r\n      modalContent.value.style.left = `${initialLeft + dx}px`;\r\n      modalContent.value.style.top = `${initialTop + dy}px`;\r\n    };\r\n\r\n    watch(\r\n      () => props.modalValue,\r\n      (newValue) => {\r\n        visible.value = newValue;\r\n      }\r\n    );\r\n    watch(\r\n      () => chatroomId.value,\r\n      (newValue) => {\r\n        if (newValue) {\r\n          getMyChat();\r\n        }\r\n      }\r\n    );\r\n\r\n    return {\r\n      chatroomId,\r\n      visible,\r\n      close,\r\n      modalContent,\r\n      startDrag,\r\n      stopDrag,\r\n      drag,\r\n      message,\r\n      messages,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.modal-content {\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  position: absolute; /* 변경: absolute로 설정하여 드래그 시 이동 가능 */\r\n  cursor: move; /* 드래그 가능한 모양으로 변경 */\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n\r\n.modal-close {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  border: none;\r\n  background: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","import { render } from \"./ChatHistoryModal.vue?vue&type=template&id=0d20f2f4&scoped=true\"\nimport script from \"./ChatHistoryModal.vue?vue&type=script&lang=js\"\nexport * from \"./ChatHistoryModal.vue?vue&type=script&lang=js\"\n\nimport \"./ChatHistoryModal.vue?vue&type=style&index=0&id=0d20f2f4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0d20f2f4\"]])\n\nexport default __exports__"],"names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$setup","chatrooms","chat","key","chatroomId","onClick","$event","openChatHistoryModal","_toDisplayString","status","_hoisted_4","credt","upddt","usr","nick","adm","_withModifiers","openChatManageModal","_hoisted_5","_hoisted_3","_createVNode","_component_ChatHistoryModal","modalValue","isChatHistoryModalVisible","_cache","_component_ChatManageModal","isChatManageModalVisible","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","value","class","visible","args","close","ref","onMousedown","startDrag","onMouseup","stopDrag","onMousemove","drag","_createTextVNode","category","memo","rows","cols","errorMessage","_createCommentVNode","save","props","type","Boolean","default","String","emits","setup","emit","computed","modalContent","isDragging","startX","startY","initialLeft","initialTop","getMyChatManageInfo","async","response","post","data","console","validate","confirm","trim","event","clientX","clientY","rect","getBoundingClientRect","left","top","dx","dy","style","watch","newValue","__exports__","components","ChatHistoryModal","ChatManageModal","userId","getChatroomMngList","log","id","onMounted","render","messages","msg","index","content","message","getMyChat"],"sourceRoot":""}