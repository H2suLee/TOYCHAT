{"version":3,"file":"js/40.f320d7e3.js","mappings":"sLAEIA,EAAAA,EAAAA,IAAkB,UAAd,aAAS,G,EAFjB,Y,wEACEC,EAAAA,EAAAA,IAuBM,YAtBJC,GACAF,EAAAA,EAAAA,IAaQ,eAXNA,EAAAA,EAAAA,IAUQ,6BATNC,EAAAA,EAAAA,IAQKE,EAAAA,GAAA,MAdbC,EAAAA,EAAAA,IAOyBC,EAAAC,WAARC,K,WADTN,EAAAA,EAAAA,IAQK,MANFO,IAAKD,EAAKE,WACVC,QAAKC,GAAEN,EAAAO,cAAcL,EAAKM,M,EAE3Bb,EAAAA,EAAAA,IAA2C,UAAvC,OAAGc,EAAAA,EAAAA,IAAGP,EAAKQ,aAAa,GAAGC,MAAI,IACnChB,EAAAA,EAAAA,IAA8B,UAA1B,SAAKc,EAAAA,EAAAA,IAAGP,EAAKU,OAAK,IACtBjB,EAAAA,EAAAA,IAA8B,UAA1B,QAAIc,EAAAA,EAAAA,IAAGP,EAAKW,QAAM,MAbhCC,M,WAiBIC,EAAAA,EAAAA,IAMEC,EAAA,CALQC,WAAYjB,EAAAkB,eAlB1B,sBAAAC,EAAA,KAAAA,EAAA,GAAAb,GAkB0BN,EAAAkB,eAAcZ,GACjCc,OAAQpB,EAAAoB,OACRT,KAAMX,EAAAW,KACNU,KAAMrB,EAAAqB,KACNjB,WAAYJ,EAAAI,Y,8FAUnB,GACEkB,WAAY,CAAEC,UAASA,EAAAA,GACvBC,KAAAA,GACE,MAAMJ,GAASK,EAAAA,EAAAA,IAAIC,aAAaC,QAAQ,YAClChB,GAAOc,EAAAA,EAAAA,IAAIC,aAAaC,QAAQ,cAChCN,GAAOI,EAAAA,EAAAA,IAAI,OACXP,GAAiBO,EAAAA,EAAAA,KAAI,GACrBrB,GAAaqB,EAAAA,EAAAA,IAAI,IACjBxB,GAAYwB,EAAAA,EAAAA,IAAI,IACtB,IAAIG,EAAuB,KAE3B,MAAMrB,EAAiBsB,IACrBzB,EAAW0B,MAAQD,EACnBX,EAAeY,OAAQ,CAAI,EAGvBC,EAAyBC,UAC7B,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,KAC3B,sCACA,CACE,GAIJlC,EAAU6B,MAAQG,EAASG,IAC7B,CAAE,MAAOC,GACPC,QAAQD,MAAM,4BAA6BA,EAC7C,GAGIE,EAA2BA,KAC/B,IAAIC,EAAM,2CAA2C7B,EAAKmB,QAC1DF,EAAuB,IAAIa,UAAUD,GAErCZ,EAAqBc,OAAS,KAC5BJ,QAAQK,IAAI,yCAAyC,EAGvDf,EAAqBgB,QAAU,KAC7BN,QAAQK,IAAI,yCAAyC,EAGvDf,EAAqBiB,QAAWR,IAC9BC,QAAQD,MAAM,8BAA+BA,EAAM,CACpD,EAiBH,OAdAS,EAAAA,EAAAA,KAAU,KAERP,IAEAR,GAAwB,KAI1BgB,EAAAA,EAAAA,KAAY,KACNnB,GACFA,EAAqBoB,OACvB,IAGK,CACL5B,SACAT,OACAU,OACApB,YACAG,aACAc,iBACAX,gBAEJ,G,UClGF,MAAM0C,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://test1/./src/admin/modules/components/chat/ChatService.vue","webpack://test1/./src/admin/modules/components/chat/ChatService.vue?d985"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>실시간 채팅 지원</h1>\r\n    <table>\r\n      <!-- 내용, 날짜, 상태 -->\r\n      <tbody>\r\n        <tr\r\n          v-for=\"chat in chatrooms\"\r\n          :key=\"chat.chatroomId\"\r\n          @click=\"openChatModal(chat._id)\"\r\n        >\r\n          <td>닉: {{ chat.participants[0].nick }}</td>\r\n          <td>생성일: {{ chat.credt }}</td>\r\n          <td>상태: {{ chat.status }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <ChatModal\r\n      v-model:modelValue=\"isModalVisible\"\r\n      :userId=\"userId\"\r\n      :nick=\"nick\"\r\n      :role=\"role\"\r\n      :chatroomId=\"chatroomId\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onUnmounted } from \"vue\";\r\nimport axios from \"axios\";\r\nimport ChatModal from \"../../../../user/modules/components/chat/ChatModal.vue\";\r\n\r\nexport default {\r\n  components: { ChatModal },\r\n  setup() {\r\n    const userId = ref(localStorage.getItem(\"adminId\"));\r\n    const nick = ref(localStorage.getItem(\"adminNick\"));\r\n    const role = ref(\"ADM\");\r\n    const isModalVisible = ref(false);\r\n    const chatroomId = ref(\"\");\r\n    const chatrooms = ref([]);\r\n    let activeAdminChkSocket = null;\r\n\r\n    const openChatModal = (id) => {\r\n      chatroomId.value = id;\r\n      isModalVisible.value = true;\r\n    };\r\n\r\n    const getLiveChatWaitingList = async () => {\r\n      try {\r\n        const response = await axios.post(\r\n          \"/api/admin/chat/liveChatWaitingList\",\r\n          {\r\n            //id: userId.value,\r\n          }\r\n        );\r\n\r\n        chatrooms.value = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching chat list:\", error);\r\n      }\r\n    };\r\n\r\n    const openActiveAdminChkSocket = () => {\r\n      let url = `ws://localhost:9090/ws/adminOnList?nick=${nick.value}`;\r\n      activeAdminChkSocket = new WebSocket(url);\r\n\r\n      activeAdminChkSocket.onopen = () => {\r\n        console.log(\"activeAdminChkSocket connection opened\");\r\n      };\r\n\r\n      activeAdminChkSocket.onclose = () => {\r\n        console.log(\"activeAdminChkSocket connection closed\");\r\n      };\r\n\r\n      activeAdminChkSocket.onerror = (error) => {\r\n        console.error(\"activeAdminChkSocket error:\", error);\r\n      };\r\n    };\r\n\r\n    onMounted(() => {\r\n      // 웹소켓 연결\r\n      openActiveAdminChkSocket();\r\n      // 실시간 상담 대기 리스트\r\n      getLiveChatWaitingList();\r\n    });\r\n\r\n    // 다른 페이지로 이동시 웹소켓 close\r\n    onUnmounted(() => {\r\n      if (activeAdminChkSocket) {\r\n        activeAdminChkSocket.close();\r\n      }\r\n    });\r\n\r\n    return {\r\n      userId,\r\n      nick,\r\n      role,\r\n      chatrooms,\r\n      chatroomId,\r\n      isModalVisible,\r\n      openChatModal,\r\n    };\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./ChatService.vue?vue&type=template&id=0601263b\"\nimport script from \"./ChatService.vue?vue&type=script&lang=js\"\nexport * from \"./ChatService.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","chatrooms","chat","key","chatroomId","onClick","$event","openChatModal","_id","_toDisplayString","participants","nick","credt","status","_hoisted_2","_createVNode","_component_ChatModal","modelValue","isModalVisible","_cache","userId","role","components","ChatModal","setup","ref","localStorage","getItem","activeAdminChkSocket","id","value","getLiveChatWaitingList","async","response","axios","post","data","error","console","openActiveAdminChkSocket","url","WebSocket","onopen","log","onclose","onerror","onMounted","onUnmounted","close","__exports__","render"],"sourceRoot":""}