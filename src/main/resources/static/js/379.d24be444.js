"use strict";(self["webpackChunktest1"]=self["webpackChunktest1"]||[]).push([[379],{4379:function(a,e,t){t.r(e),t.d(e,{default:function(){return E}});var o=t(6768),l=t(4232),n=t(5130);const s=(0,o.Lk)("h1",null,"채팅 관리",-1),r=(0,o.Lk)("thead",null,[(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"roomId"),(0,o.Lk)("td",null,"상태(진행중/완료)"),(0,o.Lk)("td",null,"카테고리"),(0,o.Lk)("td",null,"생성일"),(0,o.Lk)("td",null,"수정일"),(0,o.Lk)("td",null,"문의자"),(0,o.Lk)("td",null,"답변자"),(0,o.Lk)("td",null,"관리")])],-1),u=["onClick"],c=(0,o.Lk)("td",null,"카테고리",-1),d=["onClick"];function i(a,e,t,i,m,v){const p=(0,o.g2)("ChatHistoryModal"),g=(0,o.g2)("ChatManageModal");return(0,o.uX)(),(0,o.CE)("div",null,[s,(0,o.Lk)("table",null,[r,(0,o.Lk)("tbody",null,[((0,o.uX)(!0),(0,o.CE)(o.FK,null,(0,o.pI)(i.chatrooms,(a=>((0,o.uX)(),(0,o.CE)("tr",{key:a.chatroomId,onClick:e=>i.openChatHistoryModal(a.chatroomId)},[(0,o.Lk)("td",null,(0,l.v_)(a.chatroomId),1),(0,o.Lk)("td",null,(0,l.v_)(a.status),1),c,(0,o.Lk)("td",null,(0,l.v_)(a.credt),1),(0,o.Lk)("td",null,(0,l.v_)(a.upddt),1),(0,o.Lk)("td",null,(0,l.v_)(a.usr.nick),1),(0,o.Lk)("td",null,(0,l.v_)(a.adm.nick),1),(0,o.Lk)("td",null,[(0,o.Lk)("button",{onClick:(0,n.D$)((e=>i.openChatManageModal(a.chatroomId)),["stop"])}," 관리(클릭하면 카테고리/내용 등록할 수 있음) ",8,d)])],8,u)))),128))])]),(0,o.bF)(p,{modalValue:i.isChatHistoryModalVisible,"onUpdate:modalValue":e[0]||(e[0]=a=>i.isChatHistoryModalVisible=a),chatroomId:i.chatroomId},null,8,["modalValue","chatroomId"]),(0,o.bF)(g,{modalValue:i.isChatManageModalVisible,"onUpdate:modalValue":e[1]||(e[1]=a=>i.isChatManageModalVisible=a),chatroomId:i.chatroomId},null,8,["modalValue","chatroomId"])])}var m=t(144),v=t(4373);const p=v.A.create({baseURL:"https://oral-therine-heesu-f4935ad1.koyeb.app"});p.interceptors.request.use((a=>{const e=localStorage.getItem("jwt");return e&&(a.headers.Authorization=`Bearer ${e}`),a}),(a=>Promise.reject(a)));var g=p,h=t(79);const k=a=>((0,o.Qi)("data-v-73d4f96b"),a=a(),(0,o.jt)(),a),C=k((()=>(0,o.Lk)("option",{value:"cate1"},"category1",-1))),y=k((()=>(0,o.Lk)("option",{value:"cate2"},"category2",-1))),f=k((()=>(0,o.Lk)("option",{value:"cate3"},"category3",-1))),L=[C,y,f],I={key:0,class:"error-message"};function M(a,e,t,s,r,u){return s.visible?((0,o.uX)(),(0,o.CE)("div",{key:0,class:"modal-overlay",onClick:e[7]||(e[7]=(0,n.D$)(((...a)=>s.close&&s.close(...a)),["self"]))},[(0,o.Lk)("div",{class:"modal-content",ref:"modalContent",onMousedown:e[4]||(e[4]=(...a)=>s.startDrag&&s.startDrag(...a)),onMouseup:e[5]||(e[5]=(...a)=>s.stopDrag&&s.stopDrag(...a)),onMousemove:e[6]||(e[6]=(...a)=>s.drag&&s.drag(...a))},[(0,o.Lk)("button",{class:"modal-close",onClick:e[0]||(e[0]=(...a)=>s.close&&s.close(...a))},"×"),(0,o.eW)(" 카테고리 : "),(0,o.bo)((0,o.Lk)("select",{"onUpdate:modelValue":e[1]||(e[1]=a=>s.category=a)},L,512),[[n.u1,s.category]]),(0,o.eW)(" 메모 : "),(0,o.bo)((0,o.Lk)("textarea",{"onUpdate:modelValue":e[2]||(e[2]=a=>s.memo=a),rows:"4",cols:"50"},null,512),[[n.Jo,s.memo]]),s.errorMessage?((0,o.uX)(),(0,o.CE)("p",I,(0,l.v_)(s.errorMessage),1)):(0,o.Q3)("",!0),(0,o.Lk)("button",{onClick:e[3]||(e[3]=(...a)=>s.save&&s.save(...a))},"저장")],544)])):(0,o.Q3)("",!0)}var b={props:{modalValue:{type:Boolean,default:!1},chatroomId:{type:String,default:""}},emits:["update:modalValue"],setup(a,{emit:e}){const t=(0,m.KR)(""),l=(0,m.KR)(""),n=(0,m.KR)(""),s=(0,o.EW)((()=>a.chatroomId)),r=(0,m.KR)(a.modalValue),u=(0,m.KR)(null);let c=(0,m.KR)(!1),d=0,i=0,v=0,p=0;const h=async()=>{try{const a=await g.post("/api/admin/chat/chatManageInfo",{chatroomId:s.value});t.value=a.data.category,l.value=a.data.memo}catch(a){console.error("Error fetching chat list:",a)}},k=()=>{if(C()&&confirm("저장하시겠습니까?")){g.post("api/admin/chat/saveChatManageInfo",{chatroomId:s.value,category:t.value,memo:l.value})}},C=()=>t.value?l.value&&l.value.trim()?(n.value="",!0):(n.value="메모를 입력해주세요.",!1):(n.value="카테고리를 선택해주세요.",!1),y=()=>{s.value="",t.value="",l.value="",e("update:modalValue",!1)},f=a=>{c.value=!0,d=a.clientX,i=a.clientY;const e=u.value.getBoundingClientRect();v=e.left,p=e.top},L=()=>{c.value=!1},I=a=>{if(!c.value)return;const e=a.clientX-d,t=a.clientY-i;u.value.style.left=`${v+e}px`,u.value.style.top=`${p+t}px`};return(0,o.wB)((()=>a.modalValue),(a=>{r.value=a})),(0,o.wB)((()=>s.value),(a=>{a&&h()})),{category:t,memo:l,errorMessage:n,chatroomId:s,visible:r,close:y,modalContent:u,startDrag:f,stopDrag:L,drag:I,save:k}}},V=t(1241);const R=(0,V.A)(b,[["render",M],["__scopeId","data-v-73d4f96b"]]);var K=R,D={components:{ChatHistoryModal:h.A,ChatManageModal:K},setup(){const a=(0,m.KR)(localStorage.getItem("adminId")),e=(0,m.KR)(localStorage.getItem("adminNick")),t=(0,m.KR)([]),l=(0,m.KR)(""),n=(0,m.KR)(!1),s=(0,m.KR)(!1),r=async()=>{console.log("admId : ",a.value),console.log("admnick : ",e.value);try{const e=await g.post("/api/admin/chat/mnglist",{id:a.value});console.log("res : ",e.data),t.value=e.data}catch(o){console.error("Error fetching chat list:",o)}},u=a=>{l.value=a,n.value=!0},c=a=>{l.value=a,s.value=!0};return(0,o.sV)((()=>{r()})),{userId:a,nick:e,chatrooms:t,chatroomId:l,isChatHistoryModalVisible:n,isChatManageModalVisible:s,openChatHistoryModal:u,openChatManageModal:c}}};const w=(0,V.A)(D,[["render",i]]);var E=w},79:function(a,e,t){t.d(e,{A:function(){return m}});var o=t(6768),l=t(5130),n=t(4232);function s(a,e,t,s,r,u){return s.visible?((0,o.uX)(),(0,o.CE)("div",{key:0,class:"modal-overlay",onClick:e[4]||(e[4]=(0,l.D$)(((...a)=>s.close&&s.close(...a)),["self"]))},[(0,o.Lk)("div",{class:"modal-content",ref:"modalContent",onMousedown:e[1]||(e[1]=(...a)=>s.startDrag&&s.startDrag(...a)),onMouseup:e[2]||(e[2]=(...a)=>s.stopDrag&&s.stopDrag(...a)),onMousemove:e[3]||(e[3]=(...a)=>s.drag&&s.drag(...a))},[(0,o.Lk)("button",{class:"modal-close",onClick:e[0]||(e[0]=(...a)=>s.close&&s.close(...a))},"×"),((0,o.uX)(!0),(0,o.CE)(o.FK,null,(0,o.pI)(s.messages,((a,e)=>((0,o.uX)(),(0,o.CE)("div",{key:e},[(0,o.Lk)("p",null,(0,n.v_)(a.nick)+" : "+(0,n.v_)(a.content),1)])))),128))],544)])):(0,o.Q3)("",!0)}var r=t(144),u=t(4373),c={props:{modalValue:{type:Boolean,default:!1},chatroomId:{type:String,default:""}},emits:["update:modalValue"],setup(a,{emit:e}){const t=(0,o.EW)((()=>a.chatroomId)),l=(0,r.KR)(a.modalValue),n=(0,r.KR)(null);let s=(0,r.KR)(!1),c=0,d=0,i=0,m=0;const v=(0,r.KR)("");let p=(0,r.KR)([]);const g=async()=>{try{const a=await u.A.post("/api/chat/chatList",{chatroomId:t.value});p.value=a.data}catch(a){console.error("Error fetching chat list:",a)}},h=()=>{t.value="",p.value=[],e("update:modalValue",!1)},k=a=>{s.value=!0,c=a.clientX,d=a.clientY;const e=n.value.getBoundingClientRect();i=e.left,m=e.top},C=()=>{s.value=!1},y=a=>{if(!s.value)return;const e=a.clientX-c,t=a.clientY-d;n.value.style.left=`${i+e}px`,n.value.style.top=`${m+t}px`};return(0,o.wB)((()=>a.modalValue),(a=>{l.value=a})),(0,o.wB)((()=>t.value),(a=>{a&&g()})),{chatroomId:t,visible:l,close:h,modalContent:n,startDrag:k,stopDrag:C,drag:y,message:v,messages:p}}},d=t(1241);const i=(0,d.A)(c,[["render",s],["__scopeId","data-v-0d20f2f4"]]);var m=i}}]);
//# sourceMappingURL=379.d24be444.js.map