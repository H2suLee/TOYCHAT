{"version":3,"file":"js/980.e1953433.js","mappings":"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","sources":["webpack://test1/./src/admin/modules/components/chat/ChatManage.vue","webpack://test1/./src/axios.js","webpack://test1/./src/admin/modules/components/chat/ChatManage.vue?b467","webpack://test1/./src/user/modules/components/chat/ChatHistoryModal.vue","webpack://test1/./src/user/modules/components/chat/ChatHistoryModal.vue?1830"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>채팅 관리</h1>\r\n    <table>\r\n      <!-- 카테고리, 채팅방 생성일, 마지막 수정일, 참여자 -->\r\n      <tbody>\r\n        <tr\r\n          v-for=\"chat in chatrooms\"\r\n          :key=\"chat.chatroomId\"\r\n          @click=\"openChatHistoryModal(chat.chatroomId)\"\r\n        >\r\n          <td>카테고리</td>\r\n          <td>채팅방 생성일</td>\r\n          <td>{{ chat.lastCredt }}</td>\r\n          <td>문의자</td>\r\n          <td>답변자</td>\r\n          <td><button>관리</button>클릭하면 카테고리/내용 등록할 수 있음</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <ChatHistoryModal\r\n      v-model:modalValue=\"isChatHistoryModalVisible\"\r\n      :chatroomId=\"chatroomId\"\r\n      :userId=\"userId\"\r\n      :nick=\"nick\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from \"vue\";\r\nimport axios from \"@/axios.js\";\r\nimport ChatHistoryModal from \"../../../../user/modules/components/chat/ChatHistoryModal.vue\";\r\n\r\nexport default {\r\n  components: { ChatHistoryModal },\r\n  setup() {\r\n    const userId = ref(localStorage.getItem(\"adminId\"));\r\n    const nick = ref(localStorage.getItem(\"adminNick\"));\r\n    const chatrooms = ref([]);\r\n    const chatroomId = ref(\"\");\r\n    const isChatHistoryModalVisible = ref(false);\r\n\r\n    // 채팅 리스트 가져오기 함수\r\n    const getChatroomMngList = async () => {\r\n      console.log(\"admId : \", userId.value);\r\n      console.log(\"admnick : \", nick.value);\r\n      try {\r\n        const response = await axios.post(\"/api/admin/chat/mnglist\", {\r\n          id: userId.value,\r\n        });\r\n        chatrooms.value = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching chat list:\", error);\r\n      }\r\n    };\r\n\r\n    // 채팅창 열기\r\n    const openChatHistoryModal = (id) => {\r\n      chatroomId.value = id;\r\n      isChatHistoryModalVisible.value = true;\r\n    };\r\n\r\n    // mounted 훅에서 getMyChatroomList 호출\r\n    onMounted(() => {\r\n      getChatroomMngList();\r\n    });\r\n\r\n    return {\r\n      userId,\r\n      nick,\r\n      chatrooms,\r\n      chatroomId,\r\n      isChatHistoryModalVisible,\r\n      openChatHistoryModal,\r\n    };\r\n  },\r\n};\r\n</script>\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:9091\", // 백엔드 서버 주소\r\n  //baseURL: \"https://oral-therine-heesu-f4935ad1.koyeb.app/\", // 백엔드 서버 주소\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n","import { render } from \"./ChatManage.vue?vue&type=template&id=00dbbf60\"\nimport script from \"./ChatManage.vue?vue&type=script&lang=js\"\nexport * from \"./ChatManage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div v-if=\"visible\" class=\"modal-overlay\" @click.self=\"close\">\r\n    <div\r\n      class=\"modal-content\"\r\n      ref=\"modalContent\"\r\n      @mousedown=\"startDrag\"\r\n      @mouseup=\"stopDrag\"\r\n      @mousemove=\"drag\"\r\n    >\r\n      <button class=\"modal-close\" @click=\"close\">×</button>\r\n      <div v-for=\"(msg, index) in messages\" :key=\"index\">\r\n        <p>{{ msg.nick }} : {{ msg.content }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch, computed } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  props: {\r\n    modalValue: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    chatroomId: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n  emits: [\"update:modalValue\"],\r\n  setup(props, { emit }) {\r\n    const userId = computed(() => props.userId);\r\n    const nick = computed(() => props.nick);\r\n    const chatroomId = computed(() => props.chatroomId);\r\n    const visible = ref(props.modalValue);\r\n    const modalContent = ref(null);\r\n    let isDragging = ref(false);\r\n    let startX = 0;\r\n    let startY = 0;\r\n    let initialLeft = 0;\r\n    let initialTop = 0;\r\n    const message = ref(\"\");\r\n    let messages = ref([]);\r\n\r\n    // 대화내용 불러오기\r\n    const getMyChat = async () => {\r\n      try {\r\n        const response = await axios.post(\"/api/chat/chatList\", {\r\n          chatroomId: chatroomId.value,\r\n        });\r\n        messages.value = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching chat list:\", error);\r\n      }\r\n    };\r\n    // 닫기\r\n    const close = () => {\r\n      chatroomId.value = \"\";\r\n      messages.value = [];\r\n      emit(\"update:modalValue\", false);\r\n    };\r\n\r\n    //드래그 제어\r\n    const startDrag = (event) => {\r\n      isDragging.value = true;\r\n      startX = event.clientX;\r\n      startY = event.clientY;\r\n      const rect = modalContent.value.getBoundingClientRect();\r\n      initialLeft = rect.left;\r\n      initialTop = rect.top;\r\n    };\r\n    const stopDrag = () => {\r\n      isDragging.value = false;\r\n    };\r\n    const drag = (event) => {\r\n      if (!isDragging.value) return;\r\n      const dx = event.clientX - startX;\r\n      const dy = event.clientY - startY;\r\n      modalContent.value.style.left = `${initialLeft + dx}px`;\r\n      modalContent.value.style.top = `${initialTop + dy}px`;\r\n    };\r\n\r\n    watch(\r\n      () => props.modalValue,\r\n      (newValue) => {\r\n        visible.value = newValue;\r\n      }\r\n    );\r\n    watch(\r\n      () => chatroomId.value,\r\n      (newValue) => {\r\n        if (newValue) {\r\n          getMyChat();\r\n        }\r\n      }\r\n    );\r\n\r\n    return {\r\n      userId,\r\n      nick,\r\n      chatroomId,\r\n      visible,\r\n      close,\r\n      modalContent,\r\n      startDrag,\r\n      stopDrag,\r\n      drag,\r\n      message,\r\n      messages,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.modal-content {\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  position: absolute; /* 변경: absolute로 설정하여 드래그 시 이동 가능 */\r\n  cursor: move; /* 드래그 가능한 모양으로 변경 */\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n\r\n.modal-close {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  border: none;\r\n  background: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","import { render } from \"./ChatHistoryModal.vue?vue&type=template&id=05da503f&scoped=true\"\nimport script from \"./ChatHistoryModal.vue?vue&type=script&lang=js\"\nexport * from \"./ChatHistoryModal.vue?vue&type=script&lang=js\"\n\nimport \"./ChatHistoryModal.vue?vue&type=style&index=0&id=05da503f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-05da503f\"]])\n\nexport default __exports__"],"names":["_createElementVNode","_createTextVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","chatrooms","chat","key","chatroomId","onClick","$event","openChatHistoryModal","_hoisted_3","_hoisted_4","_toDisplayString","lastCredt","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_2","_createVNode","_component_ChatHistoryModal","modalValue","isChatHistoryModalVisible","_cache","userId","nick","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","components","ChatHistoryModal","setup","ref","getChatroomMngList","async","console","log","value","response","post","id","data","onMounted","__exports__","render","visible","class","_withModifiers","args","close","onMousedown","startDrag","onMouseup","stopDrag","onMousemove","drag","messages","msg","index","content","_createCommentVNode","props","type","Boolean","default","String","emits","emit","computed","modalContent","isDragging","startX","startY","initialLeft","initialTop","message","getMyChat","event","clientX","clientY","rect","getBoundingClientRect","left","top","dx","dy","style","watch","newValue"],"sourceRoot":""}